@use "variables";

.adw-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-s) var(--spacing-m);
  border-width: var(--border-width, 1px);
  border-style: solid;
  border-color: var(--button-border-color);
  border-radius: var(--border-radius-default);
  background-color: var(--button-bg-color);
  color: var(--button-fg-color);
  cursor: pointer;
  text-decoration: none;
  font-size: var(--font-size-base);
  text-align: center;
  transition: background-color 0.1s ease-out, border-color 0.1s ease-out, box-shadow 0.1s ease-out, filter 0.1s ease-out; // Libadwaita uses subtle transitions
  font-weight: 500; // Libadwaita buttons are often slightly bolder

  &:hover {
    background-color: var(--button-hover-bg-color);
  }

  &:active,
  &.active {
    background-color: var(--button-active-bg-color);
    box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);
  }

  &:focus-visible {
    outline: 2px solid var(--accent-color); // Consistent with base link focus, uses standalone accent
    outline-offset: 2px;
    border-radius: var(--border-radius-default); // Match button's own border-radius for the outline
  }

  &.suggested-action {
    background-color: var(--accent-bg-color);
    color: var(--accent-fg-color);
    border-color: transparent;

    &:hover {
      background-color: var(--accent-bg-hover-color);
    }
    &:active, &.active {
      background-color: var(--accent-bg-active-color);
      box-shadow: inset 0 1px 2px rgba(0,0,0,0.1); // Keep existing inner shadow for active state
    }
  }

  &.flat {
    background-color: var(--button-flat-bg-color);
    color: var(--button-fg-color);
    border-color: transparent;
    box-shadow: none;

    &:hover {
      background-color: var(--button-flat-hover-bg-color);
    }
    &:active, &.active {
      background-color: var(--button-flat-active-bg-color);
      box-shadow: inset 0 1px 2px rgba(0,0,0,0.05); // Keep existing inner shadow for active state
    }
    // Note: Flat buttons usually don't have a separate focus outline style if their bg changes on focus.
    // However, the global :focus-visible will still apply if not overridden.
    // Adwaita often makes the focus ring more subtle or integrated for flat buttons.
    // For now, the default outline is acceptable.
  }

  // Renamed from .destructive to .destructive-action for consistency
  &.destructive-action {
    background-color: var(--destructive-bg-color);
    color: var(--destructive-fg-color);
    border-color: transparent;

    &:hover {
      background-color: var(--destructive-bg-hover-color);
    }
    &:active, &.active {
      background-color: var(--destructive-bg-active-color);
      box-shadow: inset 0 1px 2px rgba(0,0,0,0.1); // Keep existing inner shadow for active state
    }
  }

  &[disabled],
  &:disabled {
    background-color: var(--button-bg-color);
    color: var(--button-fg-color);
    border-color: var(--button-border-color);
    opacity: var(--opacity-disabled, 0.5);
    cursor: not-allowed;
    pointer-events: none;
    box-shadow: none;
  }

  // Icon support within buttons (common in libadwaita)
  .icon {
    margin-right: var(--spacing-xs);
  }

  &.circular { // For icon-only circular buttons
    padding: var(--spacing-s);
    border-radius: 50%;
    .icon {
      margin-right: 0;
    }
  }
}