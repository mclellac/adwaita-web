// scss/_entry.scss
@use "variables"; // Keep for potential mixins/functions

.adw-entry {
  padding: var(--spacing-s) var(--spacing-m); // Adjusted padding
  border-width: var(--border-width, 1px);
  border-style: solid;
  // Use theme-aware border color. In light theme, this will be --border-color-light.
  // In dark theme, --border-color-dark.
  border-color: var(--border-color-light);
  border-radius: var(--border-radius-default);
  background-color: var(--view-bg-color);
  color: var(--view-fg-color);
  font-size: var(--font-size-base);
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out; // Smooth transition for focus
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.03); // Subtle inner shadow for depth

  &:focus,
  &:focus-within { // Use focus-within to style container if interactive elements inside are focused
    outline: none;
    border-color: var(--accent-bg-color); // Use accent-bg-color for border on focus
    // Optional: Add a subtle box-shadow for a stronger focus indication, similar to Adwaita
    box-shadow: inset 0 1px 1px rgba(0,0,0,0.03), 0 0 0 2px rgba(var(--accent-bg-color), 0.3);
  }

  &::placeholder {
    color: var(--window-fg-color); // Use window-fg-color for placeholder
    opacity: 0.6; // Make placeholder text lighter
  }

  &[disabled],
  &:disabled {
    opacity: var(--opacity-disabled, 0.5);
    pointer-events: none;
    background-color: var(--shade-color); // A slightly shaded background for disabled state
    border-color: var(--border-color-light); // Keep border consistent or make it more muted
    box-shadow: none; // No shadow when disabled
    // color: var(--disabled-fg-color); // If you have a specific disabled foreground color
  }
}

// Apply dark theme variables for border color
.dark-theme .adw-entry,
body.dark-theme .adw-entry {
  border-color: var(--border-color-dark);
  box-shadow: inset 0 1px 1px rgba(255,255,255,0.03); // Subtle inner shadow for depth

  &[disabled],
  &:disabled {
    border-color: var(--border-color-dark);
    background-color: var(--shade-color); // ensure shade-color is appropriate for dark too
  }

  &::placeholder {
    color: var(--window-fg-color);
    opacity: 0.6;
  }
}