// scss/_wrap_box.scss
@use 'variables';

.adw-wrap-box {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row; // Default orientation
  gap: var(--spacing-m); // Default spacing

  // Orientation
  &.wrap-box-horizontal {
    flex-direction: row;
  }
  &.wrap-box-vertical {
    flex-direction: column;
  }

  // Spacing (gap)
  // These will set both row-gap and column-gap to the same value.
  // If distinct line-spacing vs item-spacing is critical and common,
  // more complex classes or local CSS variables might be needed.
  &.wrap-box-spacing-xs { gap: var(--spacing-xs); }
  &.wrap-box-spacing-s { gap: var(--spacing-s); }
  &.wrap-box-spacing-m { gap: var(--spacing-m); }
  &.wrap-box-spacing-l { gap: var(--spacing-l); }
  &.wrap-box-spacing-xl { gap: var(--spacing-xl); }

  // Alignment (align-items)
  &.wrap-align-start { align-items: flex-start; }
  &.wrap-align-center { align-items: center; }
  &.wrap-align-end { align-items: flex-end; }
  &.wrap-align-stretch { align-items: stretch; }
  &.wrap-align-baseline { align-items: baseline; }


  // Justification (justify-content)
  // Note: justify-content applies to the main axis. For wrapping content,
  // align-content might also be relevant if there are multiple lines.
  // For simplicity, sticking to justify-content based on AdwBox.
  &.wrap-justify-start { justify-content: flex-start; }
  &.wrap-justify-center { justify-content: center; }
  &.wrap-justify-end { justify-content: flex-end; }
  &.wrap-justify-between { justify-content: space-between; }
  &.wrap-justify-around { justify-content: space-around; }
  &.wrap-justify-evenly { justify-content: space-evenly; }
}

// No specific dark theme styles needed for AdwWrapBox itself,
// as it's a layout container. Children handle their own theming.
