// Styles for Adwaita Buttons (Adwaita Skin Version)

// @use "sass:color"; // Removed for Ruby Sass compatibility - functions handled in _variables.scss
@import 'variables'; // Defines SASS color vars like $sass-accent-blue-light-color and CSS vars like --button-bg-color
@import 'mixins';

.adw-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: var(--spacing-s) var(--spacing-m); // Use CSS vars for spacing
    border-radius: var(--border-radius-default);
    border: var(--border-width) solid var(--button-border-color);
    background-color: var(--button-bg-color);
    color: var(--button-fg-color);
    font-family: var(--document-font-family);
    font-size: var(--font-size-base);
    font-weight: $font-weight-bold; // SASS var for static value
    line-height: $line-height-base;   // SASS var for static value
    text-align: center;
    text-decoration: none;
    white-space: nowrap;
    cursor: pointer;
    transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    user-select: none;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    &:hover {
        background-color: var(--button-hover-bg-color);
        border-color: var(--button-hover-border-color);
        color: var(--button-hover-text-color);
    }

    &:active {
        background-color: var(--button-active-bg-color);
        border-color: var(--button-active-border-color);
    }

    &:focus, &:focus-visible {
        outline: none;
        box-shadow: var(--focus-ring-width) solid var(--focus-ring-color); // Use CSS vars
    }

    &.disabled, &[disabled] {
        opacity: var(--opacity-disabled); // Use CSS var
        cursor: not-allowed;
        background-color: var(--button-disabled-bg-color) !important;
        border-color: var(--button-disabled-border-color) !important;
        color: var(--button-disabled-fg-color) !important;
        box-shadow: none !important;
        pointer-events: none;
    }

    .adw-icon, .icon, svg {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: $icon-size-base; // SASS var
        height: $icon-size-base; // SASS var
        fill: currentColor;

        &:first-child:not(:last-child) {
             margin-right: var(--spacing-xs);
        }
        &:last-child:not(:first-child) {
            margin-left: var(--spacing-xs);
        }
    }

    &.suggested-action {
        background-color: var(--accent-bg-color); // Uses current accent
        border-color: var(--accent-bg-color); // Or a slightly darker var if defined: var(--accent-bg-border-color, var(--accent-bg-color))
        color: var(--accent-fg-color);

        &:hover {
            background-color: var(--accent-bg-hover-color);
            border-color: var(--accent-bg-hover-color);
            // color: var(--accent-fg-hover-color, var(--accent-fg-color));
        }

        &:active {
            background-color: var(--accent-bg-active-color);
            border-color: var(--accent-bg-active-color);
        }
    }

    &.destructive-action {
        background-color: var(--destructive-bg-color);
        // Use the specific --destructive-border-color if available, otherwise fallback to bg color
        border-color: var(--destructive-border-color, var(--destructive-bg-color));
        color: var(--destructive-fg-color);

        &:hover {
            background-color: var(--destructive-bg-hover-color);
            // Use the specific --destructive-border-color for hover if available, else hover-bg
            border-color: var(--destructive-border-color, var(--destructive-bg-hover-color));
        }

        &:active {
            background-color: var(--destructive-bg-active-color);
            // Use the specific --destructive-border-color for active if available, else active-bg
            border-color: var(--destructive-border-color, var(--destructive-bg-active-color));
        }
    }

    &.flat {
        background-color: transparent;
        border-color: transparent;
        color: var(--text-color); // Use the default text color for flat buttons

        &:hover {
            background-color: var(--button-flat-hover-bg-color);
            color: var(--text-color); // Or a specific hover text color if needed
        }

        &:active {
            background-color: var(--button-flat-active-bg-color);
        }

        &.suggested-action {
            color: var(--accent-color); // Text color is the standalone accent color
            background-color: transparent;
            border-color: transparent;
            &:hover {
                color: var(--accent-color); // Or a hover variant if defined
                background-color: var(--button-flat-hover-bg-color);
            }
        }
        &.destructive-action {
            color: var(--destructive-color);
            background-color: transparent;
            border-color: transparent;
            &:hover {
                color: var(--destructive-color);
                background-color: var(--button-flat-hover-bg-color);
            }
        }
    }

    &.circular {
        padding: var(--circular-button-padding); // SASS var that points to CSS var
        border-radius: $circular-button-border-radius; // SASS var
        width: var(--circular-button-size); // SASS var that points to CSS var
        height: var(--circular-button-size);
        min-width: var(--circular-button-size);

        .adw-icon, .icon, svg {
            margin: 0;
            width: $icon-size-large; // SASS var
            height: $icon-size-large; // SASS var
        }
    }

    &.pill {
        border-radius: var(--pill-button-border-radius); // SASS var that points to CSS var
    }

    &.active { // Toggle active state
        background-color: var(--button-active-toggle-bg-color);
        border-color: var(--button-active-toggle-border-color);
        color: var(--button-active-toggle-text-color);

        &.suggested-action {
            background-color: var(--accent-bg-active-color); // Use active accent bg
            border-color: var(--accent-bg-active-color);
            color: var(--accent-fg-color);
        }
        &.flat {
            background-color: var(--button-flat-active-bg-color);
            &.suggested-action { color: var(--accent-color); }
            &.destructive-action { color: var(--destructive-color); }
        }
    }

    &.icon-only {
        padding: var(--circular-button-padding);
        .adw-icon, .icon, svg {
            margin: 0;
        }
    }
}

a.adw-button {
    text-decoration: none;
}

input[type="button"].adw-button,
input[type="submit"].adw-button,
input[type="reset"].adw-button {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    line-height: $line-height-base; // SASS var
    font-family: var(--document-font-family); // CSS var
}
