// scss/_listbox.scss

@use 'variables';

.adw-list-box {
  background-color: var(--window-bg-color); // Use window background for the listbox itself
  border: var(--border-width) solid var(--borders-color);
  border-radius: var(--border-radius-default);
  overflow: hidden; // Ensures rows inside respect the border radius

  > .adw-row { // Target direct children .adw-row
    display: flex;
    align-items: center;
    padding: var(--spacing-m);
    // border-bottom is now handled by :not(:last-child)
    transition: background-color 0.1s ease-out, color 0.1s ease-out, outline-offset 0.1s ease-out;
    cursor: default;
    outline-offset: -2px;
    background-color: var(--list-row-bg-color); // Apply the new row background color

    // Separator only between rows
    &:not(:last-child) {
      border-bottom: var(--border-width) solid var(--list-separator-color);
    }

    // Rounded corners for first and last rows
    &:first-child {
      border-top-left-radius: var(--border-radius-default);
      border-top-right-radius: var(--border-radius-default);
    }

    &:last-child {
      border-bottom-left-radius: var(--border-radius-default);
      border-bottom-right-radius: var(--border-radius-default);
      border-bottom: none; // Ensure no bottom border on the very last row
    }

    &:hover:not(.activated):not(.selected):not(:disabled) {
      background-color: var(--list-row-hover-bg-color);
    }

    &.interactive { // Add this class if the row itself is clickable
      cursor: pointer;
    }

    // More prominent hover for activatable items, could also be specific activatable-hover-bg-color
    &.activatable:hover:not(.activated):not(.selected):not(:disabled) {
      background-color: var(--list-row-active-bg-color);
    }

    &.interactive:focus-visible,
    &.activatable:focus-visible {
      outline: 2px solid var(--accent-color);
      // outline-offset is already -2px from above
      border-radius: var(--border-radius-small);
      // z-index: 1; // If needed to bring outline above next row's border
    }

    &.activated,
    &.selected { // Use .selected as well, common terminology
      background-color: var(--list-row-selected-bg-color);
      color: var(--list-row-selected-fg-color);

      // Ensure text and icons within the activated row are readable
      .adw-label, .icon, // Assuming you might have .adw-label or .icon classes
      .title, .subtitle, // Common text elements in rows
      > * { // Or style all direct children
        color: var(--list-row-selected-fg-color);
      }
      .subtitle { // Ensure subtitle isn't too faint when selected
        opacity: 0.85; // Slightly less than full opacity if desired, but more than default
      }
    }

    &[disabled],
    &:disabled {
        opacity: var(--opacity-disabled, 0.5);
        cursor: not-allowed;
        background-color: transparent; // Or a specific disabled bg for rows
        &:hover {
            background-color: transparent; // No hover effect on disabled rows
        }
    }

    // Example: styling for a title and subtitle within a row
    .title {
      font-weight: 500; // Bolder title
      color: var(--view-fg-color); // Default text color
    }
    .subtitle {
      font-size: var(--font-size-small);
      color: var(--view-fg-color); // Default text color
      opacity: 0.7; // Muted subtitle
    }
    // If row is activated, title/subtitle color should be --accent-fg-color
    &.activated .title,
    &.activated .subtitle,
    &.selected .title,
    &.selected .subtitle {
        color: var(--list-row-selected-fg-color);
        opacity: 1; // Ensure full opacity for subtitle
    }
     // Ensure title/subtitle default colors are correctly set if not activated
    &:not(.activated):not(.selected) .title {
      color: var(--view-fg-color); // Or inherit if already correct
    }
    &:not(.activated):not(.selected) .subtitle {
      color: var(--view-fg-color); // Or inherit
      opacity: 0.7; // Default muted subtitle
    }
  }
}

// Dark theme adjustments for ListBox borders are now handled by --borders-color
// and new list-row state variables. Specific dark theme overrides below are removed.
// .dark-theme .adw-list-box,
// body.dark-theme .adw-list-box {
//   border-color: var(--border-color-dark);

//   .adw-row { // Target .adw-row
//     border-bottom-color: var(--border-color-dark);

//     &:hover {
//       // A subtle hover for dark theme, often a slightly lighter shade of the bg
//       background-color: var(--shade-color); // Ensure this shade is suitable for dark
//     }

//     &.activatable:hover {
//         background-color: var(--button-hover-bg-color); // Ensure this is dark theme appropriate
//     }

//     // Ensure title/subtitle colors are correct for dark theme if not activated
//     .title {
//       color: var(--view-fg-color);
//     }
//     .subtitle {
//       color: var(--view-fg-color);
//     }
//   }
// }

// Flat style: no outer border, often used when listbox fills a container
.adw-list-box.flat {
  border: none;
  border-radius: 0; // Or keep radius if desired, but typically flat means no outer decoration
  // Row separators might need to be stronger if no outer border
  // .adw-row { // Target .adw-row
  //   border-bottom-color: var(--border-color-light-stronger); // Define if needed
  // }
}
// Dark theme for flat listbox
.dark-theme .adw-list-box.flat,
body.dark-theme .adw-list-box.flat {
  // .adw-row { // Target .adw-row
  //   border-bottom-color: var(--border-color-dark-stronger); // Define if needed
  // }
}