// scss/_password_entry_row.scss
@use "variables";
@use "mixins"; // For row-base, if AdwPasswordEntryRow creates its own .adw-row structure

// AdwPasswordEntryRow IS an AdwEntryRow.
// Most of its styling (title, subtitle, overall row structure, embedded entry style)
// should come from _entry_row.scss.
// This file should only add specifics for the password part, like the visibility toggle.

.adw-password-entry-row {
  // The web component AdwPasswordEntryRow has a shadow DOM root:
  // <div class="adw-row adw-password-entry-row">
  //   <div class="adw-entry-row-text-content">...</div> (title/subtitle)
  //   <div class="adw-password-entry-input-area">
  //     <adw-entry class="adw-entry-row-entry" type="password"></adw-entry>
  //     <adw-button class="adw-password-entry-row-toggle circular flat">...</adw-button>
  //   </div>
  // </div>
  // So, it inherits .adw-row styling from its own structure.
  // It also effectively inherits .adw-entry-row styling for its parts like
  // .adw-entry-row-text-content and the embedded .adw-entry-row-entry.

  // Container for the <adw-entry> and the visibility toggle button
  .adw-password-entry-input-area {
    flex-grow: 1; // Take remaining space in the row
    display: flex;
    align-items: center;
    gap: var(--spacing-xs); // Small gap between entry and toggle button
    min-width: 0; // Allow shrinking
  }

  // The <adw-entry> itself (already styled by _entry_row.scss for focus, bg etc.)
  .adw-entry-row-entry {
    flex-grow: 1; // Entry takes up available space within the input-area
    min-width: 0; // Allow shrinking
    // type="password" is handled by browser/adw-entry component.
  }

  // The visibility toggle button (.adw-password-entry-row-toggle)
  .adw-password-entry-row-toggle.adw-button {
    // It's a circular flat button, AdwButton component styles should apply.
    // Specific overrides if needed:
    flex-shrink: 0; // Don't shrink the button
    padding: var(--button-padding-circular-flat, var(--spacing-xxs)); // Ensure compact padding for icon button
    min-width: unset; // Override if AdwButton has a larger min-width

    .adw-icon, // If AdwIcon is used
    .icon svg { // If raw SVG is used via .icon class in AdwButton
      width: var(--icon-size-inline, 1em); // Match typical inline icon size
      height: var(--icon-size-inline, 1em);
      // Color should be handled by AdwButton's flat style (usually secondary-fg-color or icon-color)
    }
  }

  // Add .password class styling if needed, as per docs "row that carries .entry and .password style classes"
  // This could be added to the host element by JS if specific AdwPasswordEntryRow-level overrides are needed
  // beyond what .adw-entry-row provides.
  // For now, assuming .adw-password-entry-row selector is sufficient.
}
