// scss/_popover.scss
@use 'variables';
@use 'mixins'; // For z-index

// Main popover container/widget.
// This element would be positioned by JS.
// It should have an .open class for visibility and animations.
.adw-popover {
  position: fixed; // Typically fixed, JS handles top/left
  z-index: var(--z-index-popover);
  opacity: 0;
  transform: scale(0.95) translateY(-10px); // Initial state for animation
  transform-origin: top center; // Default origin, JS might adjust based on arrow
  visibility: hidden;
  transition: opacity 0.1s ease-out, transform 0.1s ease-out, visibility 0s linear 0.1s;

  &.open {
    opacity: 1;
    transform: scale(1) translateY(0);
    visibility: visible;
    transition-delay: 0s;
  }
}

.adw-popover-surface {
  background-color: var(--popover-bg-color);
  color: var(--window-fg-color); // Popovers usually contain interactive content, use window_fg
  border-radius: var(--border-radius-large); // Libadwaita popovers often use larger radius (12px)
  box-shadow: var(--popover-box-shadow);
  // Default padding for popover content if not a menu. Menus handle their own.
  padding: var(--spacing-m);
  position: relative; // For arrow positioning if arrow is part of the surface div

  // For popovers that function as menus (contain a listbox)
  &.menu {
    padding: var(--spacing-xs) 0; // Menus have tighter vertical padding, no horizontal on surface
    .adw-list-box {
      background-color: transparent;
      border: none;
      box-shadow: none;
      padding: 0; // ListBox itself has no padding here, rows do

      .adw-row { // General row styling within a menu popover
        padding: var(--spacing-s) var(--spacing-m);
        border-radius: var(--border-radius-small);
        background-color: transparent; // Rows are transparent initially
        color: var(--window-fg-color); // Ensure text color is standard

        &:hover:not(.disabled):not([disabled]) {
          background-color: var(--list-row-hover-bg-color); // Subtle hover
        }

        // Selected or focused items in a menu list
        &.selected, // From GtkListBox selection
        &:focus-visible, // For keyboard navigation
        &.active-item { // Custom class if needed for "active" but not GtkSelected
          background-color: var(--accent-bg-color);
          color: var(--accent-fg-color);
          // Ensure icons and all text elements within also get the accent foreground color
          .adw-icon, svg, .title, .subtitle, span { // Target common elements
            color: var(--accent-fg-color) !important; // Use important if specificity is an issue
            fill: var(--accent-fg-color) !important;
          }
        }
         &:focus-visible {
           outline: none; // Custom styling for focus, no default outline
         }
      }
    }
  }
}

// Popover Arrow
// Positioned absolutely by JS relative to the .adw-popover container.
.adw-popover-arrow {
  position: absolute;
  width: 16px;  // Standard arrow size in Libadwaita (can be adjusted)
  height: 8px; // Half of width for a typical isosceles triangle base
  overflow: hidden; // Used to clip the square into a triangle

  &::before { // The rotated square that forms the triangle
    content: '';
    position: absolute;
    width: 12px; // Size of the square to be rotated
    height: 12px;
    background-color: var(--popover-bg-color);
    // Apply the same shadow as the popover surface for consistency, but might need adjustments
    // box-shadow: var(--popover-box-shadow); // This can be tricky to get right for an arrow
    // A simpler border or slight inner shadow might be better:
    border: var(--border-width) solid var(--popover-shade-color); // Use popover-shade for arrow border
    transform-origin: center center;
    transform: rotate(45deg);
  }

  // Arrow pointing upwards (popover is below the target)
  &.arrow-up {
    // JS sets top/left. This aligns the tip.
    // Example: top: -8px (height of arrow);
    &::before {
      bottom: -7px; // Position square so its top point (after rotation) forms the arrow tip
      left: 2px;    // Center the 12x12 square in the 16px width
      border-top-color: transparent;
      border-left-color: transparent;
    }
  }

  // Arrow pointing downwards (popover is above the target)
  &.arrow-down {
    // Example: bottom: -8px;
     &::before {
      top: -7px;
      left: 2px;
      border-bottom-color: transparent;
      border-right-color: transparent;
    }
  }

  // Arrow pointing left (popover is to the right of the target)
  &.arrow-left {
    width: 8px; // Base of triangle is now vertical
    height: 16px;
    // Example: left: -8px;
    &::before {
      top: 2px; // Center
      right: -7px; // Position for left pointing
      border-top-color: transparent;
      border-bottom-color: transparent;
    }
  }

  // Arrow pointing right (popover is to the left of the target)
  &.arrow-right {
     width: 8px;
     height: 16px;
    // Example: right: -8px;
    &::before {
      top: 2px;
      left: -7px; // Position for right pointing
      border-left-color: transparent;
      border-right-color: transparent;
    }
  }
}
