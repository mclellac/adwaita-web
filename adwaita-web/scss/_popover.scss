@use 'variables';

// Styles for the <adw-popover> host element.
// The host element itself is positioned fixed by the JS.
// Its shadow DOM contains .adw-popover-surface and .adw-popover-arrow.
:host(adw-popover) {
  // display: none; // Controlled by JS by setting display: block/none on host
  // position: fixed; // Set by JS
  z-index: var(--z-index-popover, 1200); // Default from variables
  // opacity and transform for animations are handled by the .adw-popover-surface
}

.adw-popover-surface {
  background-color: var(--popover-bg-color, var(--window-bg-color));
  border-radius: var(--popover-border-radius, var(--border-radius-default));
  box-shadow: var(--popover-box-shadow, 0 3px 6px rgba(0, 0, 0, 0.16));
  padding: var(--popover-padding, var(--spacing-m)); // Consistent padding for popovers
  position: relative; // For arrow positioning if arrow is inside surface

  // Transition for open/close (applied when host's display changes)
  // Consider if animations are needed on the surface itself or the host
  opacity: 1; // Start fully visible once display:block is set
  transform: scale(1);
  // Example transition if host is toggled:
  // transition: opacity 0.1s ease-out, transform 0.1s ease-out;
  // :host(:not([open])) .adw-popover-surface {
  //   opacity: 0;
  //   transform: scale(0.95);
  // }
}

.adw-popover-arrow {
  position: absolute; // Positioned relative to the :host(adw-popover) element
  width: var(--arrow-size, 12px);
  height: var(--arrow-size, 12px);
  background-color: var(--popover-bg-color, var(--window-bg-color)); // Same as popover surface
  transform-origin: center center;
  // The actual border is created by rotating a square and hiding parts,
  // or using clip-path. For simplicity, we use a single background color.
  // Box shadow can make it look more integrated if desired.
  // box-shadow: var(--popover-box-shadow); // Optional: if arrow should also cast shadow

  // Common setup for all arrow directions
  &::before { // This pseudo-element creates the visible triangle
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: inherit; // Inherits from .adw-popover-arrow
    transform: rotate(45deg);
    // If borders are desired on the arrow (more complex):
    // border: 1px solid var(--popover-border-color, var(--borders-color));
  }

  &.arrow-up { // Popover is below target, arrow points up
    // top, left set by JS
    // transform: translateY(calc(-100% + var(--arrow-offset, 6px))); // Position arrow tip at edge
    // clip-path: polygon(50% 0%, 0% 100%, 100% 100%); // Triangle pointing up
    &::before {
      // If using borders, only top and left/right would be visible depending on rotation
      // For simple triangle, rotation handles it.
    }
  }
  &.arrow-down { // Popover is above target, arrow points down
    // top, left set by JS
    // transform: translateY(calc(0% - var(--arrow-offset, 6px)));
    // clip-path: polygon(0% 0%, 100% 0%, 50% 100%); // Triangle pointing down
     &::before {
        // box-shadow: 0 1px 1px 0 rgba(0,0,0,0.1); // Shadow for down arrow
     }
  }
  &.arrow-left { // Popover is to the right of target, arrow points left
    // top, left set by JS
    // transform: translateX(calc(-100% + var(--arrow-offset, 6px)));
    // clip-path: polygon(0% 50%, 100% 0%, 100% 100%); // Triangle pointing left
  }
  &.arrow-right { // Popover is to the left of target, arrow points right
    // top, left set by JS
    // transform: translateX(calc(0% - var(--arrow-offset, 6px)));
    // clip-path: polygon(0% 0%, 100% 50%, 0% 100%); // Triangle pointing right
  }
}

// Ensure proper padding for common Adwaita elements if used directly in popover
// For example, list boxes in popovers (menus) are often borderless and have specific row styling.
.adw-popover-surface {
  .adw-list-box {
    // Common style for list boxes inside popovers (e.g., menus)
    background-color: transparent; // Inherit popover background
    border: none;
    box-shadow: none;
    padding: var(--spacing-xs) 0; // Typical menu padding

    .adw-row, adw-action-row, adw-entry-row { // Target both WC and class-based rows
      // Menu item like padding
      padding: var(--spacing-s) var(--spacing-m);
      border-radius: var(--border-radius-small); // Rounded corners for menu items
      &:hover {
        background-color: var(--list-row-hover-bg-color);
      }
      &.active, &:focus, &:focus-within { // More visible active/focus state
        background-color: var(--accent-bg-color);
        color: var(--accent-fg-color);
        .adw-label, .adw-action-row__title, .adw-action-row__subtitle { // Ensure text color changes
            color: var(--accent-fg-color);
        }
      }
    }
  }
}
