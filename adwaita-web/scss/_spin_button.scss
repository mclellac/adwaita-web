// scss/_spin_button.scss
@use 'variables';

.adw-spin-button {
  display: inline-flex;
  align-items: center;
  border: 1px solid var(--button-border-color); // Use button border for consistency
  border-radius: var(--border-radius-default);
  background-color: var(--view-bg-color); // Entry part background
  overflow: hidden; // Keep buttons contained

  &.disabled {
    opacity: var(--opacity-disabled, 0.5);
    pointer-events: none;
    .adw-spin-button-entry {
      background-color: var(--shade-color); // Disabled entry background
    }
  }

  .adw-spin-button-entry {
    // AdwEntry styles are applied by the factory, but we might override some specifics
    border: none; // Remove individual entry border, wrapper has it
    border-radius: 0;
    box-shadow: none; // No inner shadow
    // Remove fixed height, let AdwEntry's natural padding define its height.
    // Ensure AdwEntry component has appropriate vertical padding (e.g., var(--spacing-s))
    // height: auto; // Default
    // min-height: auto; // Default

    &:focus, &:focus-within {
      box-shadow: none; // No focus shadow on entry if wrapper handles focus
    }
  }

  .adw-spin-button-buttons {
    display: flex;
    flex-direction: column;
    align-self: stretch; // Make button container take full height of the parent flex container
    box-sizing: border-box;

    .adw-spin-button-control.adw-button { // Target the specific buttons
      background-color: var(--button-bg-color);
      border: none;
      border-radius: 0;
      padding: var(--spacing-xxs) var(--spacing-xs); // Minimal padding
      min-height: 0; // Allow button to shrink
      height: 50%; // Each button takes half the container height
      box-sizing: border-box; // Padding and border included in height
      line-height: 1; // For better icon centering if text was used
      box-shadow: none;
      display: flex; // Ensure icon inside is centered
      align-items: center;
      justify-content: center;

      &:hover {
        background-color: var(--button-hover-bg-color);
      }
      &:active {
        background-color: var(--button-active-bg-color);
      }
      &:disabled {
        background-color: var(--button-bg-color);
        opacity: 0.4; // Slightly more opacity for disabled internal buttons
      }

      .adw-icon { // Target the adw-icon wrapper
        width: 12px; // Explicit small size for these icons
        height: 12px;
        margin-right: 0; // Override default icon margin if any
      }
    }
    .adw-spin-button-up {
        // Separator line between up and down buttons
        border-bottom: 1px solid var(--button-border-color);
    }
  }

  &:focus-within { // Focus indication on the wrapper
    outline: 2px solid var(--accent-color); // Use standalone accent for outline
    outline-offset: 1px;
    border-color: var(--accent-color); // Change border to standalone accent on focus
  }
}

.dark-theme .adw-spin-button,
body.dark-theme .adw-spin-button {
  border-color: var(--button-border-color);
  background-color: var(--view-bg-color);

   &.disabled .adw-spin-button-entry {
      background-color: var(--shade-color);
    }

  .adw-spin-button-buttons {
    .adw-button {
      background-color: var(--button-bg-color);
      &:disabled {
         background-color: var(--button-bg-color);
      }
    }
     .adw-spin-button-up {
        border-bottom-color: var(--button-border-color);
    }
  }
   &:focus-within {
    border-color: var(--accent-bg-color);
  }
}
