@use 'variables';
@use 'mixins';

// scss/_entry.scss

@mixin input-style {
    width: 100%;
    box-sizing: border-box;
    background-color: var(--entry-background-color);
    color: var(--window-fg-color);
    border: var(--border-width) solid var(--border-color);
    border-radius: var(--border-radius-medium);
    padding: var(--spacing-s) var(--spacing-m);
    font-size: var(--font-size-base);
    line-height: var(--line-height-base);
    transition: border-color var(--animation-duration-short) var(--animation-ease-out-cubic),
                box-shadow var(--animation-duration-short) var(--animation-ease-out-cubic);

    &:hover {
      border-color: var(--accent-color);
    }

    &:focus, &:focus-visible {
      border-color: var(--accent-color);
      box-shadow: 0 0 0 var(--focus-ring-width) rgba(var(--accent-color-rgb), 0.3);
      outline: none;
    }

    &::placeholder {
      color: var(--secondary-fg-color);
      opacity: 1; // Browsers often have a default opacity
    }

    // Read-only and disabled states
    &:read-only {
      background-color: var(--input-readonly-bg-color);
      cursor: default;
      &:hover {
        border-color: var(--border-color); // No hover effect
      }
    }

    &:disabled {
      opacity: var(--disabled-opacity);
      cursor: not-allowed;
      &:hover {
        border-color: var(--border-color);
      }
    }
}

// Styling for .adw-entry, a wrapper for <input> elements
.adw-entry {
  // Using a variable for the background color of the entry
  --entry-background-color: var(--view-bg-color);

  display: inline-block; // To respect width and height
  position: relative;
  width: 100%; // Default to full width, can be overridden by parent container

  input[type="text"],
  input[type="password"],
  input[type="search"],
  input[type="email"],
  input[type="url"],
  input[type="tel"],
  input[type="number"] {
    @include input-style;
  }

  // Styles for entries with icons
  &.with-icon-start,
  &.with-icon-end {
    .adw-entry-icon {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      color: var(--secondary-fg-color);
      display: flex;
      align-items: center;
      pointer-events: none; // Icon is not interactive by default
    }
  }
  &.with-icon-start {
    input {
      padding-left: calc(var(--icon-size-base) + var(--spacing-m) * 2);
    }
    .adw-entry-icon {
      left: var(--spacing-m);
    }
  }
  &.with-icon-end {
    input {
      padding-right: calc(var(--icon-size-base) + var(--spacing-m) * 2);
    }
    .adw-entry-icon {
      right: var(--spacing-m);
    }
  }

  // For multiline entries using <textarea>
  textarea {
    @include input-style;
    resize: vertical; // Allow vertical resizing
    min-height: calc(var(--font-size-base) * #{variables.$line-height-base} * 3 + (var(--spacing-s) * 2) + (var(--border-width) * 2)); // Approx 3 lines
  }

  // Error state for validation
  &.error {
    input, textarea {
      border-color: var(--error-color);
      &:focus, &:focus-visible {
        box-shadow: 0 0 0 var(--focus-ring-width) rgba(var(--error-color-rgb), 0.3);
      }
    }
  }
}
