// SCSS Mixins
@import 'variables'; // To access variables if needed within mixins

// Base styling for list rows / preference rows
@mixin row-base {
  display: flex;
  align-items: center;
  box-sizing: border-box; // Ensure padding and border are included in width/height
  padding: var(--row-padding-vertical, var(--row-padding-vertical-default)) var(--row-padding-horizontal, var(--row-padding-horizontal-default));
  min-height: var(--row-min-height, 48px);
  background-color: var(--row-bg-color, transparent); // Usually transparent if listbox has bg
  color: var(--row-fg-color, var(--primary-fg-color));
  border-width: 0 0 var(--border-width) 0; // Bottom border only by default
  border-style: solid;
  border-color: var(--list-separator-color); // Default separator color

  // When inside a listbox, the listbox might control the very last border
  .adw-list-box > &:last-child, // If this row is a direct child of listbox
  &:host(.adw-list-box > :last-child) { // If this row is a web component, direct child of listbox
    border-bottom-width: 0;
  }

  // For activatable rows, common focus style
  &.activatable, &[activatable] { // Handle both class and attribute
    &:focus-visible {
      outline: 2px solid var(--accent-color);
      outline-offset: var(--focus-outline-offset, -2px); // Inset outline
      // Use a variable for row border radius, defaulting if not set
      border-radius: var(--row-border-radius, var(--border-radius-small));
    }
  }
}

// Mixin to apply separators between direct children of a list-like container
// $apply-separators: boolean - true to add separators, false to remove them
// $child-selector: string - selector for children that should get separators (e.g., '.adw-row', 'adw-action-row')
@mixin apply-list-separators($apply-separators: true, $child-selector: '> *') {
  #{$child-selector} {
    &:not(:last-child) {
      border-bottom-style: if($apply-separators, solid, none);
      border-bottom-width: if($apply-separators, var(--border-width), 0);
      border-bottom-color: if($apply-separators, var(--list-separator-color), transparent);
    }
    // Ensure last child explicitly has no bottom border if separators are managed this way
    &:last-child {
        border-bottom-width: 0;
    }
  }
  // If the container itself has a bottom border (e.g. from .boxed-list style),
  // and separators are applied, the last child's separator might need to be removed.
  // However, the above :not(:last-child) handles this for internal separators.
}

// Example:
// @mixin common-focus-style {
//   &:focus-visible {
//     outline: 2px solid var(--accent-color);
//     outline-offset: 2px;
//     border-radius: var(--border-radius-small);
//   }
// }
//
// Then in a component:
// .my-interactive-element {
//   @include common-focus-style;
// }

// Mixin for clearfix
// @mixin clearfix {
//   &::after {
//     content: "";
//     display: table;
//     clear: both;
//   }
// }
