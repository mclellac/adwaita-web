@use 'variables';
@use 'mixins';

.adw-banner {
  // Banners are typically placed at the top of a view or window.
  // They are not part of a listbox structure usually.
  padding: var(--spacing-s) var(--spacing-m); // Slightly less vertical padding than rows
  background-color: var(--banner-bg-color); // Use theme-defined default
  color: var(--banner-fg-color); // Use theme-defined default
  // No border-radius by default, as it usually spans full width.
  // border-radius: var(--border-radius-default);
  border-bottom: var(--border-width) solid var(--banner-border-color); // Use theme-defined default
  // margin-bottom: var(--spacing-m); // Margin is context-dependent, parent should handle normally
  box-sizing: border-box; // Ensure padding doesn't affect width calculation for fixed positioning

  // Positioning: Fixed at the top, full width, overlaying content
  position: fixed;
  top: 0;
  left: 0;
  right: 0; // Ensures full width
  z-index: var(--z-index-banner, 1000); // Ensure it's above most other content

  display: flex;
  justify-content: space-between; // Pushes title and button apart
  align-items: center;
  gap: var(--spacing-m); // Gap between title and button if both are present

  // Animation for reveal/hide
  opacity: 0;
  // Transform from slightly above its final position to slide down into view
  transform: translateY(calc(-100% - var(--border-width, 1px) - 10px)); // Start further up for a slide-in effect
  transition: opacity var(--animation-duration-medium) var(--animation-ease-out-cubic),
              transform var(--animation-duration-medium) var(--animation-ease-out-cubic);
  // Ensure it's not clickable when hidden
  visibility: hidden;
  pointer-events: none;
  // position: relative; // No longer relative, now fixed

  &.visible {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
    pointer-events: auto;
  }

  .adw-banner-title {
    flex-grow: 1; // Title takes available space
    font-size: var(--font-size-base);
    font-weight: normal; // Banners usually have normal weight text
    // Text alignment: Libadwaita centers if enough space, else left-aligns.
    // Default to left-align for simplicity in CSS. Centering would require more complex checks or JS.
    text-align: left;
    min-width: 0; // For ellipsis if title is very long
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .adw-banner-button.adw-button {
    // Styling for the AdwButton component when used inside a banner
    flex-shrink: 0; // Button should not shrink
    // AdwButton's own styles (default, .suggested, .flat) will apply.
    // Ensure it aligns well with the text.
    // Example: if button is too tall, adjust its internal padding or line-height.
  }

  // Common styling for ALL adw-button elements (action or dismiss) inside any banner
  // This ensures they have a distinct background from the banner itself.
  .adw-button {
    background-color: var(--banner-button-bg-color);
    color: var(--banner-button-fg-color);
    border: none; // Ensure no border for a cleaner look like in the example image
    // Padding and other button base styles come from _button.scss

    &:hover {
      background-color: var(--banner-button-hover-bg-color);
    }
    &:active, &.active { // Include .active for toggle buttons if they were used here
      background-color: var(--banner-button-active-bg-color);
    }

    // If the button is also flat (like our dismiss button), these styles will override flat's transparent bg.
    &.flat {
        background-color: var(--banner-button-bg-color); // Explicitly override flat's transparent bg
        color: var(--banner-button-fg-color);
        &:hover {
          background-color: var(--banner-button-hover-bg-color);
        }
        &:active, &.active {
          background-color: var(--banner-button-active-bg-color);
        }
    }
  }

  // Type-specific overrides
  &.adw-banner-error {
    background-color: var(--banner-error-bg-color);
    color: var(--banner-error-fg-color);
    border-bottom-color: var(--banner-error-border-color);

    // Override for buttons inside an ERROR banner
    .adw-button { // Targets both .adw-banner-button and .adw-banner-dismiss-button within an error banner
      background-color: var(--banner-error-button-bg-color);
      color: var(--banner-error-button-fg-color);
      border: none; // Ensure no border here too

      &:hover {
        background-color: var(--banner-error-button-hover-bg-color);
      }
      &:active, &.active {
        background-color: var(--banner-error-button-active-bg-color);
      }

      // If the button is also flat (like our dismiss button), these styles will override flat's transparent bg.
      &.flat {
          background-color: var(--banner-error-button-bg-color); // Explicitly override flat's transparent bg
          color: var(--banner-error-button-fg-color);
          &:hover {
            background-color: var(--banner-error-button-hover-bg-color);
          }
          &:active, &.active {
            background-color: var(--banner-error-button-active-bg-color);
          }
      }
    }
  }
  // Add .adw-banner-info for specific info button styling if different from default .adw-button in banner
  // Add .adw-banner-warning, .adw-banner-success if those types are supported and variables defined
}

// Variables that should be defined in _variables.scss (within theme mixins):
// --banner-bg-color (for default/info)
// --banner-fg-color (for default/info)
// --banner-border-color (for default/info)
// --banner-error-bg-color
// --banner-error-fg-color
// --banner-error-border-color
// etc. for other types
