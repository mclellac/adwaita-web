@use 'variables';
@use 'mixins';

// scss/_banner.scss

// AdwBanner Styling
.adw-banner {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--spacing-s) var(--spacing-m);
  background-color: var(--view-bg-color); // Banners appear on top of views
  border-bottom: var(--border-width) solid var(--shade-color);
  // Banners are often full-width
  width: 100%;
  box-sizing: border-box;

  .adw-banner-content {
    flex-grow: 1;
    color: var(--primary-fg-color);
  }

  .adw-banner-title {
    font-weight: var(--font-weight-bold);
  }

  .adw-banner-actions {
    display: flex;
    align-items: center;
    gap: var(--spacing-s);
    margin-left: var(--spacing-m);
  }

  // The primary button in a banner is typically a suggested-action button
  // but can also just be a normal button.
  .adw-button.suggested-action {
    // This will use the standard .adw-button.suggested-action styles
  }

  // The dismiss button is often a flat button
  .adw-banner-dismiss-button {
    @include mixins.apply-flat-button-style;       // This applies transparent bg/border and flat hover/active
    color: var(--secondary-fg-color); // Use secondary text color for less emphasis

    &:hover {
      color: var(--primary-fg-color);
    }
  }

  // Banners for specific purposes (like info, warning, etc.)
  // These classes can be added to .adw-banner to change its appearance.
  &.info {
    background-color: var(--accent-bg-color);
    color: var(--accent-fg-color);
    border-bottom-color: transparent; // No border needed when fully colored

    .adw-banner-title, .adw-banner-content {
      color: inherit;
    }
    .adw-banner-dismiss-button {
      color: inherit;
      opacity: var(--dim-opacity);
      &:hover {
        opacity: 1.0;
        background-color: rgba(255, 255, 255, 0.1); // Use white overlay for hover on colored bg
      }
    }
    // Buttons inside should adapt. Often they are flat with inverted colors.
    .adw-button:not(.adw-banner-dismiss-button) {
      // Assuming a mixin or style for buttons on colored backgrounds
      // For now, let's make them look like "outline" buttons
      background-color: transparent;
      border: var(--border-width) solid currentColor;
      color: inherit;

      &:hover {
        background-color: rgba(255, 255, 255, 0.1);
      }
    }
  }

  &.warning {
    background-color: var(--warning-bg-color);
    color: var(--warning-fg-color);
    border-bottom-color: transparent;
    // Similar styling adjustments as .info
  }

  &.error {
    background-color: var(--error-bg-color);
    color: var(--error-fg-color);
    border-bottom-color: transparent;
    // Similar styling adjustments as .info
  }
}
