// scss/_dialog.scss
@use 'variables';
@use 'mixins'; // For z-index variables if defined there

.adw-dialog {
  background-color: var(--dialog-bg-color);
  color: var(--dialog-fg-color);
  border-radius: var(--window-radius); // Dialogs are like small windows
  box-shadow: var(--dialog-box-shadow); // Defined in _variables.scss
  padding: 0; // Dialog manages its own internal padding via header/content/footer
  width: 90%; // Responsive width
  max-width: 550px; // Max width for larger screens
  position: fixed; // For centering and overlay
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.95); // Initial state for animation
  z-index: var(--z-index-dialog);
  opacity: 0;
  visibility: hidden; // Start hidden
  transition: opacity 0.15s ease-out, transform 0.15s ease-out, visibility 0s linear 0.15s;

  &.open {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
    visibility: visible;
    transition: opacity 0.15s ease-out, transform 0.15s ease-out, visibility 0s linear 0s;
  }

  // Dialog Header (AdwAlertDialog uses this structure implicitly)
  .adw-dialog-header {
    display: flex;
    justify-content: space-between; // Title left, close button right
    align-items: center;
    padding: var(--spacing-m); // Standard padding
    border-bottom: var(--border-width) solid var(--border-color);

    .adw-dialog-title {
      font-size: var(--title-3-font-size); // Use typography utility class size
      font-weight: var(--font-weight-bold);
      color: inherit; // Inherits --dialog-fg-color
    }

    // Styling for a dedicated close button in the header
    .adw-dialog-close-button.adw-button {
      // Assuming .adw-button provides base button styling (padding, border, etc.)
      // And .circular, .flat modify it. We primarily need to set the icon here.
      // If the button is purely iconic, it might need width/height settings too.
      // Let's assume it's a circular flat button, so padding might create the size.
      // The icon itself:
      .adw-icon { // If an <span class="adw-icon"> is used inside the button
        background-color: currentColor;
        -webkit-mask-image: url('../data/icons/symbolic/window-close-symbolic.svg');
        mask-image: url('../data/icons/symbolic/window-close-symbolic.svg');
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-position: center;
        mask-position: center;
        -webkit-mask-size: contain;
        mask-size: contain;
        width: var(--icon-size-base); // Standard icon size
        height: var(--icon-size-base);
        display: inline-block; // Ensure it takes space
      }
      // If the button *is* the icon (no inner .adw-icon span):
      // background-color: currentColor;
      // -webkit-mask-image: url('../data/icons/symbolic/window-close-symbolic.svg');
      // mask-image: url('../data/icons/symbolic/window-close-symbolic.svg');
      // width: var(--icon-size-base); height: var(--icon-size-base); etc.
      // For now, sticking to .adw-icon child pattern.
    }
  }

  // Dialog Content Area
  .adw-dialog-content {
    padding: var(--spacing-l); // Generous padding for content
    line-height: 1.6;
    color: inherit;

    // For AdwAlertDialog, title might be here if no header is used
    .adw-alert-dialog-heading { // Specific class for AlertDialog heading
        font-size: var(--title-2-font-size);
        font-weight: var(--font-weight-bold);
        margin-bottom: var(--spacing-xs);
        text-align: center;
    }
    .adw-alert-dialog-body { // Specific class for AlertDialog body text
        font-size: var(--font-size-base);
        text-align: center;
        opacity: var(--dim-opacity); // Body text is often dimmed
        margin-bottom: var(--spacing-l);
    }
  }

  // Dialog Footer / Actions Area
  .adw-dialog-footer {
    display: flex;
    justify-content: flex-end; // Buttons typically to the right
    align-items: center;
    padding: var(--spacing-m);
    border-top: var(--border-width) solid var(--border-color);
    gap: var(--spacing-s); // Gap between buttons

    // AdwAlertDialog has a specific layout for responses (buttons)
    // This is a general footer, AlertDialog might have more specific button styling/layout.
  }

  // Old .adw-dialog-buttons, kept for compatibility, prefer .adw-dialog-footer
  .adw-dialog-buttons {
    @extend .adw-dialog-footer; // Inherit footer styles
  }


  // AdwAlertDialog specific button layout (often centered or full-width if few)
  // This would typically be inside .adw-dialog-content if no footer is explicitly used by AlertDialog structure
  .adw-alert-dialog-responses {
    display: flex;
    flex-direction: column; // Default for stacked buttons in simple alerts
    gap: var(--spacing-s);
    margin-top: var(--spacing-m);

    .adw-button {
      width: 100%; // Buttons often take full width in simple alerts
    }

    // For horizontal button layout in alerts (e.g. confirm/cancel)
    &.horizontal {
        flex-direction: row;
        justify-content: flex-end; // Or center, depending on HIG
         .adw-button {
            width: auto; // Auto width for horizontal buttons
         }
    }
  }
}

.adw-dialog-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--dialog-backdrop-color); // Defined in _variables.scss
  z-index: var(--z-index-dialog-backdrop);
  opacity: 0;
  visibility: hidden; // Start hidden
  transition: opacity 0.15s ease-out, visibility 0s linear 0.15s;

  &.open {
    opacity: 1; // Matches Libadwaita's default backdrop opacity (0.2 for dark, 0.4 for light)
                // Our var(--dialog-backdrop-color) is rgba(0,0,0,0.4)
    visibility: visible;
    transition: opacity 0.15s ease-out, visibility 0s linear 0s;
  }
}